[
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "DIA",
    "expression": "join ([coalesce(cells['DIA'].value,''),coalesce(cells['MES'].value,''),coalesce(cells['ANO'].value,'')],'/')",
    "onError": "keep-original",
    "newColumnName": "Fecha",
    "columnInsertIndex": 8,
    "description": "Crear la columna Fecha en el índice 8 basada en la columna DIA usando la expresión join ([coalesce(cells['DIA'].value,''),coalesce(cells['MES'].value,''),coalesce(cells['ANO'].value,'')],'/')"
  },
  {
    "op": "core/column-removal",
    "columnName": "ANO",
    "description": "Eliminar columna ANO"
  },
  {
    "op": "core/column-removal",
    "columnName": "MES",
    "description": "Eliminar columna MES"
  },
  {
    "op": "core/column-removal",
    "columnName": "DIA",
    "description": "Eliminar columna DIA"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "V01",
          "expression": "value",
          "columnName": "V01",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "N",
                "l": "N"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "H01",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Transforma el texto de las celdas en la columna H01 usando la expresión value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "PROVINCIA",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Transforma el texto de las celdas en la columna PROVINCIA usando la expresión value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "MUNICIPIO",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Transforma el texto de las celdas en la columna MUNICIPIO usando la expresión value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ESTACION",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Transforma el texto de las celdas en la columna ESTACION usando la expresión value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "MAGNITUD",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Transforma el texto de las celdas en la columna MAGNITUD usando la expresión value.toNumber()"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "H01",
    "expression": "join ([coalesce(cells['H01'].value,''),coalesce(cells['V01'].value,'')],'')",
    "onError": "keep-original",
    "newColumnName": "1",
    "columnInsertIndex": 7,
    "description": "Crear la columna 1 en el índice 7 basada en la columna H01 usando la expresión join ([coalesce(cells['H01'].value,''),coalesce(cells['V01'].value,'')],'')"
  },
  {
    "op": "core/column-reorder",
    "columnNames": [
      "PROVINCIA",
      "MUNICIPIO",
      "ESTACION",
      "MAGNITUD",
      "PUNTO_MUESTREO",
      "Fecha",
      "1",
      "H02",
      "V02",
      "H03",
      "V03",
      "H04",
      "V04",
      "H05",
      "V05",
      "H06",
      "V06",
      "H07",
      "V07",
      "H08",
      "V08",
      "H09",
      "V09",
      "H10",
      "V10",
      "H11",
      "V11",
      "H12",
      "V12",
      "H13",
      "V13",
      "H14",
      "V14",
      "H15",
      "V15",
      "H16",
      "V16",
      "H17",
      "V17",
      "H18",
      "V18",
      "H19",
      "V19",
      "H20",
      "V20",
      "H21",
      "V21",
      "H22",
      "V22",
      "H23",
      "V23",
      "H24",
      "V24"
    ],
    "description": "Reorganizar columnas"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "H02",
    "expression": "join ([coalesce(cells['H02'].value,''),coalesce(cells['V02'].value,'')],'')",
    "onError": "keep-original",
    "newColumnName": "2",
    "columnInsertIndex": 8,
    "description": "Crear la columna 2 en el índice 8 basada en la columna H02 usando la expresión join ([coalesce(cells['H02'].value,''),coalesce(cells['V02'].value,'')],'')"
  },
  {
    "op": "core/column-reorder",
    "columnNames": [
      "PROVINCIA",
      "MUNICIPIO",
      "ESTACION",
      "MAGNITUD",
      "PUNTO_MUESTREO",
      "Fecha",
      "1",
      "2",
      "H03",
      "V03",
      "H04",
      "V04",
      "H05",
      "V05",
      "H06",
      "V06",
      "H07",
      "V07",
      "H08",
      "V08",
      "H09",
      "V09",
      "H10",
      "V10",
      "H11",
      "V11",
      "H12",
      "V12",
      "H13",
      "V13",
      "H14",
      "V14",
      "H15",
      "V15",
      "H16",
      "V16",
      "H17",
      "V17",
      "H18",
      "V18",
      "H19",
      "V19",
      "H20",
      "V20",
      "H21",
      "V21",
      "H22",
      "V22",
      "H23",
      "V23",
      "H24",
      "V24"
    ],
    "description": "Reorganizar columnas"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "H03",
    "expression": "join ([coalesce(cells['H03'].value,''),coalesce(cells['V03'].value,'')],'')",
    "onError": "keep-original",
    "newColumnName": "3",
    "columnInsertIndex": 9,
    "description": "Crear la columna 3 en el índice 9 basada en la columna H03 usando la expresión join ([coalesce(cells['H03'].value,''),coalesce(cells['V03'].value,'')],'')"
  },
  {
    "op": "core/column-reorder",
    "columnNames": [
      "PROVINCIA",
      "MUNICIPIO",
      "ESTACION",
      "MAGNITUD",
      "PUNTO_MUESTREO",
      "Fecha",
      "1",
      "2",
      "3",
      "H04",
      "V04",
      "H05",
      "V05",
      "H06",
      "V06",
      "H07",
      "V07",
      "H08",
      "V08",
      "H09",
      "V09",
      "H10",
      "V10",
      "H11",
      "V11",
      "H12",
      "V12",
      "H13",
      "V13",
      "H14",
      "V14",
      "H15",
      "V15",
      "H16",
      "V16",
      "H17",
      "V17",
      "H18",
      "V18",
      "H19",
      "V19",
      "H20",
      "V20",
      "H21",
      "V21",
      "H22",
      "V22",
      "H23",
      "V23",
      "H24",
      "V24"
    ],
    "description": "Reorganizar columnas"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "H04",
    "expression": "join ([coalesce(cells['H04'].value,''),coalesce(cells['V04'].value,'')],'')",
    "onError": "keep-original",
    "newColumnName": "4",
    "columnInsertIndex": 10,
    "description": "Crear la columna 4 en el índice 10 basada en la columna H04 usando la expresión join ([coalesce(cells['H04'].value,''),coalesce(cells['V04'].value,'')],'')"
  },
  {
    "op": "core/column-reorder",
    "columnNames": [
      "PROVINCIA",
      "MUNICIPIO",
      "ESTACION",
      "MAGNITUD",
      "PUNTO_MUESTREO",
      "Fecha",
      "1",
      "2",
      "3",
      "4",
      "H05",
      "V05",
      "H06",
      "V06",
      "H07",
      "V07",
      "H08",
      "V08",
      "H09",
      "V09",
      "H10",
      "V10",
      "H11",
      "V11",
      "H12",
      "V12",
      "H13",
      "V13",
      "H14",
      "V14",
      "H15",
      "V15",
      "H16",
      "V16",
      "H17",
      "V17",
      "H18",
      "V18",
      "H19",
      "V19",
      "H20",
      "V20",
      "H21",
      "V21",
      "H22",
      "V22",
      "H23",
      "V23",
      "H24",
      "V24"
    ],
    "description": "Reorganizar columnas"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "H05",
    "expression": "join ([coalesce(cells['H05'].value,''),coalesce(cells['V05'].value,'')],'')",
    "onError": "keep-original",
    "newColumnName": "5",
    "columnInsertIndex": 11,
    "description": "Crear la columna 5 en el índice 11 basada en la columna H05 usando la expresión join ([coalesce(cells['H05'].value,''),coalesce(cells['V05'].value,'')],'')"
  },
  {
    "op": "core/column-reorder",
    "columnNames": [
      "PROVINCIA",
      "MUNICIPIO",
      "ESTACION",
      "MAGNITUD",
      "PUNTO_MUESTREO",
      "Fecha",
      "1",
      "2",
      "3",
      "4",
      "5",
      "H06",
      "V06",
      "H07",
      "V07",
      "H08",
      "V08",
      "H09",
      "V09",
      "H10",
      "V10",
      "H11",
      "V11",
      "H12",
      "V12",
      "H13",
      "V13",
      "H14",
      "V14",
      "H15",
      "V15",
      "H16",
      "V16",
      "H17",
      "V17",
      "H18",
      "V18",
      "H19",
      "V19",
      "H20",
      "V20",
      "H21",
      "V21",
      "H22",
      "V22",
      "H23",
      "V23",
      "H24",
      "V24"
    ],
    "description": "Reorganizar columnas"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "H06",
    "expression": "join ([coalesce(cells['H06'].value,''),coalesce(cells['V06'].value,'')],'')",
    "onError": "keep-original",
    "newColumnName": "6",
    "columnInsertIndex": 12,
    "description": "Crear la columna 6 en el índice 12 basada en la columna H06 usando la expresión join ([coalesce(cells['H06'].value,''),coalesce(cells['V06'].value,'')],'')"
  },
  {
    "op": "core/column-reorder",
    "columnNames": [
      "PROVINCIA",
      "MUNICIPIO",
      "ESTACION",
      "MAGNITUD",
      "PUNTO_MUESTREO",
      "Fecha",
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "H07",
      "V07",
      "H08",
      "V08",
      "H09",
      "V09",
      "H10",
      "V10",
      "H11",
      "V11",
      "H12",
      "V12",
      "H13",
      "V13",
      "H14",
      "V14",
      "H15",
      "V15",
      "H16",
      "V16",
      "H17",
      "V17",
      "H18",
      "V18",
      "H19",
      "V19",
      "H20",
      "V20",
      "H21",
      "V21",
      "H22",
      "V22",
      "H23",
      "V23",
      "H24",
      "V24"
    ],
    "description": "Reorganizar columnas"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "H07",
    "expression": "join ([coalesce(cells['H07'].value,''),coalesce(cells['V07'].value,'')],'')",
    "onError": "keep-original",
    "newColumnName": "7",
    "columnInsertIndex": 13,
    "description": "Crear la columna 7 en el índice 13 basada en la columna H07 usando la expresión join ([coalesce(cells['H07'].value,''),coalesce(cells['V07'].value,'')],'')"
  },
  {
    "op": "core/column-reorder",
    "columnNames": [
      "PROVINCIA",
      "MUNICIPIO",
      "ESTACION",
      "MAGNITUD",
      "PUNTO_MUESTREO",
      "Fecha",
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "7",
      "H08",
      "V08",
      "H09",
      "V09",
      "H10",
      "V10",
      "H11",
      "V11",
      "H12",
      "V12",
      "H13",
      "V13",
      "H14",
      "V14",
      "H15",
      "V15",
      "H16",
      "V16",
      "H17",
      "V17",
      "H18",
      "V18",
      "H19",
      "V19",
      "H20",
      "V20",
      "H21",
      "V21",
      "H22",
      "V22",
      "H23",
      "V23",
      "H24",
      "V24"
    ],
    "description": "Reorganizar columnas"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "H08",
    "expression": "join ([coalesce(cells['H08'].value,''),coalesce(cells['V08'].value,'')],'')",
    "onError": "keep-original",
    "newColumnName": "8",
    "columnInsertIndex": 14,
    "description": "Crear la columna 8 en el índice 14 basada en la columna H08 usando la expresión join ([coalesce(cells['H08'].value,''),coalesce(cells['V08'].value,'')],'')"
  },
  {
    "op": "core/column-reorder",
    "columnNames": [
      "PROVINCIA",
      "MUNICIPIO",
      "ESTACION",
      "MAGNITUD",
      "PUNTO_MUESTREO",
      "Fecha",
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "7",
      "8",
      "H09",
      "V09",
      "H10",
      "V10",
      "H11",
      "V11",
      "H12",
      "V12",
      "H13",
      "V13",
      "H14",
      "V14",
      "H15",
      "V15",
      "H16",
      "V16",
      "H17",
      "V17",
      "H18",
      "V18",
      "H19",
      "V19",
      "H20",
      "V20",
      "H21",
      "V21",
      "H22",
      "V22",
      "H23",
      "V23",
      "H24",
      "V24"
    ],
    "description": "Reorganizar columnas"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "H09",
    "expression": "join ([coalesce(cells['H09'].value,''),coalesce(cells['V09'].value,'')],'')",
    "onError": "keep-original",
    "newColumnName": "9",
    "columnInsertIndex": 15,
    "description": "Crear la columna 9 en el índice 15 basada en la columna H09 usando la expresión join ([coalesce(cells['H09'].value,''),coalesce(cells['V09'].value,'')],'')"
  },
  {
    "op": "core/column-reorder",
    "columnNames": [
      "PROVINCIA",
      "MUNICIPIO",
      "ESTACION",
      "MAGNITUD",
      "PUNTO_MUESTREO",
      "Fecha",
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "7",
      "8",
      "9",
      "H10",
      "V10",
      "H11",
      "V11",
      "H12",
      "V12",
      "H13",
      "V13",
      "H14",
      "V14",
      "H15",
      "V15",
      "H16",
      "V16",
      "H17",
      "V17",
      "H18",
      "V18",
      "H19",
      "V19",
      "H20",
      "V20",
      "H21",
      "V21",
      "H22",
      "V22",
      "H23",
      "V23",
      "H24",
      "V24"
    ],
    "description": "Reorganizar columnas"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "H10",
    "expression": "join ([coalesce(cells['H10'].value,''),coalesce(cells['V10'].value,'')],'')",
    "onError": "keep-original",
    "newColumnName": "10",
    "columnInsertIndex": 16,
    "description": "Crear la columna 10 en el índice 16 basada en la columna H10 usando la expresión join ([coalesce(cells['H10'].value,''),coalesce(cells['V10'].value,'')],'')"
  },
  {
    "op": "core/column-reorder",
    "columnNames": [
      "PROVINCIA",
      "MUNICIPIO",
      "ESTACION",
      "MAGNITUD",
      "PUNTO_MUESTREO",
      "Fecha",
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "7",
      "8",
      "9",
      "10",
      "H11",
      "V11",
      "H12",
      "V12",
      "H13",
      "V13",
      "H14",
      "V14",
      "H15",
      "V15",
      "H16",
      "V16",
      "H17",
      "V17",
      "H18",
      "V18",
      "H19",
      "V19",
      "H20",
      "V20",
      "H21",
      "V21",
      "H22",
      "V22",
      "H23",
      "V23",
      "H24",
      "V24"
    ],
    "description": "Reorganizar columnas"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "H11",
    "expression": "join ([coalesce(cells['H11'].value,''),coalesce(cells['V11'].value,'')],'')",
    "onError": "keep-original",
    "newColumnName": "11",
    "columnInsertIndex": 17,
    "description": "Crear la columna 11 en el índice 17 basada en la columna H11 usando la expresión join ([coalesce(cells['H11'].value,''),coalesce(cells['V11'].value,'')],'')"
  },
  {
    "op": "core/column-reorder",
    "columnNames": [
      "PROVINCIA",
      "MUNICIPIO",
      "ESTACION",
      "MAGNITUD",
      "PUNTO_MUESTREO",
      "Fecha",
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "7",
      "8",
      "9",
      "10",
      "11",
      "H12",
      "V12",
      "H13",
      "V13",
      "H14",
      "V14",
      "H15",
      "V15",
      "H16",
      "V16",
      "H17",
      "V17",
      "H18",
      "V18",
      "H19",
      "V19",
      "H20",
      "V20",
      "H21",
      "V21",
      "H22",
      "V22",
      "H23",
      "V23",
      "H24",
      "V24"
    ],
    "description": "Reorganizar columnas"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "H12",
    "expression": "join ([coalesce(cells['H12'].value,''),coalesce(cells['V12'].value,'')],'')",
    "onError": "keep-original",
    "newColumnName": "12",
    "columnInsertIndex": 18,
    "description": "Crear la columna 12 en el índice 18 basada en la columna H12 usando la expresión join ([coalesce(cells['H12'].value,''),coalesce(cells['V12'].value,'')],'')"
  },
  {
    "op": "core/column-reorder",
    "columnNames": [
      "PROVINCIA",
      "MUNICIPIO",
      "ESTACION",
      "MAGNITUD",
      "PUNTO_MUESTREO",
      "Fecha",
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "7",
      "8",
      "9",
      "10",
      "11",
      "12",
      "H13",
      "V13",
      "H14",
      "V14",
      "H15",
      "V15",
      "H16",
      "V16",
      "H17",
      "V17",
      "H18",
      "V18",
      "H19",
      "V19",
      "H20",
      "V20",
      "H21",
      "V21",
      "H22",
      "V22",
      "H23",
      "V23",
      "H24",
      "V24"
    ],
    "description": "Reorganizar columnas"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "H13",
    "expression": "join ([coalesce(cells['H13'].value,''),coalesce(cells['V13'].value,'')],'')",
    "onError": "keep-original",
    "newColumnName": "13",
    "columnInsertIndex": 19,
    "description": "Crear la columna 13 en el índice 19 basada en la columna H13 usando la expresión join ([coalesce(cells['H13'].value,''),coalesce(cells['V13'].value,'')],'')"
  },
  {
    "op": "core/column-reorder",
    "columnNames": [
      "PROVINCIA",
      "MUNICIPIO",
      "ESTACION",
      "MAGNITUD",
      "PUNTO_MUESTREO",
      "Fecha",
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "7",
      "8",
      "9",
      "10",
      "11",
      "12",
      "13",
      "H14",
      "V14",
      "H15",
      "V15",
      "H16",
      "V16",
      "H17",
      "V17",
      "H18",
      "V18",
      "H19",
      "V19",
      "H20",
      "V20",
      "H21",
      "V21",
      "H22",
      "V22",
      "H23",
      "V23",
      "H24",
      "V24"
    ],
    "description": "Reorganizar columnas"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "H14",
    "expression": "join ([coalesce(cells['H14'].value,''),coalesce(cells['V14'].value,'')],'')",
    "onError": "keep-original",
    "newColumnName": "14",
    "columnInsertIndex": 20,
    "description": "Crear la columna 14 en el índice 20 basada en la columna H14 usando la expresión join ([coalesce(cells['H14'].value,''),coalesce(cells['V14'].value,'')],'')"
  },
  {
    "op": "core/column-reorder",
    "columnNames": [
      "PROVINCIA",
      "MUNICIPIO",
      "ESTACION",
      "MAGNITUD",
      "PUNTO_MUESTREO",
      "Fecha",
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "7",
      "8",
      "9",
      "10",
      "11",
      "12",
      "13",
      "14",
      "H15",
      "V15",
      "H16",
      "V16",
      "H17",
      "V17",
      "H18",
      "V18",
      "H19",
      "V19",
      "H20",
      "V20",
      "H21",
      "V21",
      "H22",
      "V22",
      "H23",
      "V23",
      "H24",
      "V24"
    ],
    "description": "Reorganizar columnas"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "H15",
    "expression": "join ([coalesce(cells['H15'].value,''),coalesce(cells['V15'].value,'')],'')",
    "onError": "keep-original",
    "newColumnName": "15",
    "columnInsertIndex": 21,
    "description": "Crear la columna 15 en el índice 21 basada en la columna H15 usando la expresión join ([coalesce(cells['H15'].value,''),coalesce(cells['V15'].value,'')],'')"
  },
  {
    "op": "core/column-reorder",
    "columnNames": [
      "PROVINCIA",
      "MUNICIPIO",
      "ESTACION",
      "MAGNITUD",
      "PUNTO_MUESTREO",
      "Fecha",
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "7",
      "8",
      "9",
      "10",
      "11",
      "12",
      "13",
      "14",
      "15",
      "H16",
      "V16",
      "H17",
      "V17",
      "H18",
      "V18",
      "H19",
      "V19",
      "H20",
      "V20",
      "H21",
      "V21",
      "H22",
      "V22",
      "H23",
      "V23",
      "H24",
      "V24"
    ],
    "description": "Reorganizar columnas"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "H16",
    "expression": "join ([coalesce(cells['H16'].value,''),coalesce(cells['V16'].value,'')],'')",
    "onError": "keep-original",
    "newColumnName": "16",
    "columnInsertIndex": 22,
    "description": "Crear la columna 16 en el índice 22 basada en la columna H16 usando la expresión join ([coalesce(cells['H16'].value,''),coalesce(cells['V16'].value,'')],'')"
  },
  {
    "op": "core/column-reorder",
    "columnNames": [
      "PROVINCIA",
      "MUNICIPIO",
      "ESTACION",
      "MAGNITUD",
      "PUNTO_MUESTREO",
      "Fecha",
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "7",
      "8",
      "9",
      "10",
      "11",
      "12",
      "13",
      "14",
      "15",
      "16",
      "H17",
      "V17",
      "H18",
      "V18",
      "H19",
      "V19",
      "H20",
      "V20",
      "H21",
      "V21",
      "H22",
      "V22",
      "H23",
      "V23",
      "H24",
      "V24"
    ],
    "description": "Reorganizar columnas"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "H17",
    "expression": "join ([coalesce(cells['H17'].value,''),coalesce(cells['V17'].value,'')],'')",
    "onError": "keep-original",
    "newColumnName": "17",
    "columnInsertIndex": 23,
    "description": "Crear la columna 17 en el índice 23 basada en la columna H17 usando la expresión join ([coalesce(cells['H17'].value,''),coalesce(cells['V17'].value,'')],'')"
  },
  {
    "op": "core/column-reorder",
    "columnNames": [
      "PROVINCIA",
      "MUNICIPIO",
      "ESTACION",
      "MAGNITUD",
      "PUNTO_MUESTREO",
      "Fecha",
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "7",
      "8",
      "9",
      "10",
      "11",
      "12",
      "13",
      "14",
      "15",
      "16",
      "17",
      "H18",
      "V18",
      "H19",
      "V19",
      "H20",
      "V20",
      "H21",
      "V21",
      "H22",
      "V22",
      "H23",
      "V23",
      "H24",
      "V24"
    ],
    "description": "Reorganizar columnas"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "H18",
    "expression": "join ([coalesce(cells['H18'].value,''),coalesce(cells['V18'].value,'')],'')",
    "onError": "keep-original",
    "newColumnName": "18",
    "columnInsertIndex": 24,
    "description": "Crear la columna 18 en el índice 24 basada en la columna H18 usando la expresión join ([coalesce(cells['H18'].value,''),coalesce(cells['V18'].value,'')],'')"
  },
  {
    "op": "core/column-reorder",
    "columnNames": [
      "PROVINCIA",
      "MUNICIPIO",
      "ESTACION",
      "MAGNITUD",
      "PUNTO_MUESTREO",
      "Fecha",
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "7",
      "8",
      "9",
      "10",
      "11",
      "12",
      "13",
      "14",
      "15",
      "16",
      "17",
      "18",
      "H19",
      "V19",
      "H20",
      "V20",
      "H21",
      "V21",
      "H22",
      "V22",
      "H23",
      "V23",
      "H24",
      "V24"
    ],
    "description": "Reorganizar columnas"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "H19",
    "expression": "join ([coalesce(cells['H19'].value,''),coalesce(cells['V19'].value,'')],'')",
    "onError": "keep-original",
    "newColumnName": "19",
    "columnInsertIndex": 25,
    "description": "Crear la columna 19 en el índice 25 basada en la columna H19 usando la expresión join ([coalesce(cells['H19'].value,''),coalesce(cells['V19'].value,'')],'')"
  },
  {
    "op": "core/column-reorder",
    "columnNames": [
      "PROVINCIA",
      "MUNICIPIO",
      "ESTACION",
      "MAGNITUD",
      "PUNTO_MUESTREO",
      "Fecha",
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "7",
      "8",
      "9",
      "10",
      "11",
      "12",
      "13",
      "14",
      "15",
      "16",
      "17",
      "18",
      "19",
      "H20",
      "V20",
      "H21",
      "V21",
      "H22",
      "V22",
      "H23",
      "V23",
      "H24",
      "V24"
    ],
    "description": "Reorganizar columnas"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "H20",
    "expression": "join ([coalesce(cells['H20'].value,''),coalesce(cells['V20'].value,'')],'')",
    "onError": "keep-original",
    "newColumnName": "20",
    "columnInsertIndex": 26,
    "description": "Crear la columna 20 en el índice 26 basada en la columna H20 usando la expresión join ([coalesce(cells['H20'].value,''),coalesce(cells['V20'].value,'')],'')"
  },
  {
    "op": "core/column-reorder",
    "columnNames": [
      "PROVINCIA",
      "MUNICIPIO",
      "ESTACION",
      "MAGNITUD",
      "PUNTO_MUESTREO",
      "Fecha",
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "7",
      "8",
      "9",
      "10",
      "11",
      "12",
      "13",
      "14",
      "15",
      "16",
      "17",
      "18",
      "19",
      "20",
      "H21",
      "V21",
      "H22",
      "V22",
      "H23",
      "V23",
      "H24",
      "V24"
    ],
    "description": "Reorganizar columnas"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "H21",
    "expression": "join ([coalesce(cells['H21'].value,''),coalesce(cells['V21'].value,'')],'')",
    "onError": "keep-original",
    "newColumnName": "21",
    "columnInsertIndex": 27,
    "description": "Crear la columna 21 en el índice 27 basada en la columna H21 usando la expresión join ([coalesce(cells['H21'].value,''),coalesce(cells['V21'].value,'')],'')"
  },
  {
    "op": "core/column-reorder",
    "columnNames": [
      "PROVINCIA",
      "MUNICIPIO",
      "ESTACION",
      "MAGNITUD",
      "PUNTO_MUESTREO",
      "Fecha",
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "7",
      "8",
      "9",
      "10",
      "11",
      "12",
      "13",
      "14",
      "15",
      "16",
      "17",
      "18",
      "19",
      "20",
      "21",
      "H22",
      "V22",
      "H23",
      "V23",
      "H24",
      "V24"
    ],
    "description": "Reorganizar columnas"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "H22",
    "expression": "join ([coalesce(cells['H22'].value,''),coalesce(cells['V22'].value,'')],'')",
    "onError": "keep-original",
    "newColumnName": "22",
    "columnInsertIndex": 28,
    "description": "Crear la columna 22 en el índice 28 basada en la columna H22 usando la expresión join ([coalesce(cells['H22'].value,''),coalesce(cells['V22'].value,'')],'')"
  },
  {
    "op": "core/column-reorder",
    "columnNames": [
      "PROVINCIA",
      "MUNICIPIO",
      "ESTACION",
      "MAGNITUD",
      "PUNTO_MUESTREO",
      "Fecha",
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "7",
      "8",
      "9",
      "10",
      "11",
      "12",
      "13",
      "14",
      "15",
      "16",
      "17",
      "18",
      "19",
      "20",
      "21",
      "22",
      "H23",
      "V23",
      "H24",
      "V24"
    ],
    "description": "Reorganizar columnas"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "H23",
    "expression": "join ([coalesce(cells['H23'].value,''),coalesce(cells['V23'].value,'')],'')",
    "onError": "keep-original",
    "newColumnName": "23",
    "columnInsertIndex": 29,
    "description": "Crear la columna 23 en el índice 29 basada en la columna H23 usando la expresión join ([coalesce(cells['H23'].value,''),coalesce(cells['V23'].value,'')],'')"
  },
  {
    "op": "core/column-reorder",
    "columnNames": [
      "PROVINCIA",
      "MUNICIPIO",
      "ESTACION",
      "MAGNITUD",
      "PUNTO_MUESTREO",
      "Fecha",
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "7",
      "8",
      "9",
      "10",
      "11",
      "12",
      "13",
      "14",
      "15",
      "16",
      "17",
      "18",
      "19",
      "20",
      "21",
      "22",
      "23",
      "H24",
      "V24"
    ],
    "description": "Reorganizar columnas"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "H24",
    "expression": "join ([coalesce(cells['H24'].value,''),coalesce(cells['V24'].value,'')],'')",
    "onError": "keep-original",
    "newColumnName": "24",
    "columnInsertIndex": 30,
    "description": "Crear la columna 24 en el índice 30 basada en la columna H24 usando la expresión join ([coalesce(cells['H24'].value,''),coalesce(cells['V24'].value,'')],'')"
  },
  {
    "op": "core/column-reorder",
    "columnNames": [
      "PROVINCIA",
      "MUNICIPIO",
      "ESTACION",
      "MAGNITUD",
      "PUNTO_MUESTREO",
      "Fecha",
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "7",
      "8",
      "9",
      "10",
      "11",
      "12",
      "13",
      "14",
      "15",
      "16",
      "17",
      "18",
      "19",
      "20",
      "21",
      "22",
      "23",
      "24"
    ],
    "description": "Reorganizar columnas"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "1",
    "expression": "grel:if(\n  value.toString().trim().endsWith('N'),\n  null,\n  value.toString().replace('V','').trim()\n)",
    "onError": "set-to-blank",
    "newColumnName": "H01",
    "columnInsertIndex": 7,
    "description": "Crear la columna H01 en el índice 7 basada en la columna 1 usando la expresión grel:if(\n  value.toString().trim().endsWith('N'),\n  null,\n  value.toString().replace('V','').trim()\n)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "2",
    "expression": "grel:if(\n  value.toString().trim().endsWith('N'),\n  null,\n  value.toString().replace('V','').trim()\n)",
    "onError": "set-to-blank",
    "newColumnName": "H02",
    "columnInsertIndex": 9,
    "description": "Crear la columna H02 en el índice 9 basada en la columna 2 usando la expresión grel:if(\n  value.toString().trim().endsWith('N'),\n  null,\n  value.toString().replace('V','').trim()\n)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "3",
    "expression": "grel:if(\n  value.toString().trim().endsWith('N'),\n  null,\n  value.toString().replace('V','').trim()\n)",
    "onError": "set-to-blank",
    "newColumnName": "H03",
    "columnInsertIndex": 11,
    "description": "Crear la columna H03 en el índice 11 basada en la columna 3 usando la expresión grel:if(\n  value.toString().trim().endsWith('N'),\n  null,\n  value.toString().replace('V','').trim()\n)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "4",
    "expression": "grel:if(\n  value.toString().trim().endsWith('N'),\n  null,\n  value.toString().replace('V','').trim()\n)",
    "onError": "set-to-blank",
    "newColumnName": "H04",
    "columnInsertIndex": 13,
    "description": "Crear la columna H04 en el índice 13 basada en la columna 4 usando la expresión grel:if(\n  value.toString().trim().endsWith('N'),\n  null,\n  value.toString().replace('V','').trim()\n)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "5",
    "expression": "grel:if(\n  value.toString().trim().endsWith('N'),\n  null,\n  value.toString().replace('V','').trim()\n)",
    "onError": "set-to-blank",
    "newColumnName": "H05",
    "columnInsertIndex": 15,
    "description": "Crear la columna H05 en el índice 15 basada en la columna 5 usando la expresión grel:if(\n  value.toString().trim().endsWith('N'),\n  null,\n  value.toString().replace('V','').trim()\n)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "6",
    "expression": "grel:if(\n  value.toString().trim().endsWith('N'),\n  null,\n  value.toString().replace('V','').trim()\n)",
    "onError": "set-to-blank",
    "newColumnName": "H06",
    "columnInsertIndex": 17,
    "description": "Crear la columna H06 en el índice 17 basada en la columna 6 usando la expresión grel:if(\n  value.toString().trim().endsWith('N'),\n  null,\n  value.toString().replace('V','').trim()\n)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "7",
    "expression": "grel:if(\n  value.toString().trim().endsWith('N'),\n  null,\n  value.toString().replace('V','').trim()\n)",
    "onError": "set-to-blank",
    "newColumnName": "H08",
    "columnInsertIndex": 19,
    "description": "Crear la columna H08 en el índice 19 basada en la columna 7 usando la expresión grel:if(\n  value.toString().trim().endsWith('N'),\n  null,\n  value.toString().replace('V','').trim()\n)"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "H08",
    "newColumnName": "H07",
    "description": "Renombra la columna H08 a H07"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "8",
    "expression": "grel:if(\n  value.toString().trim().endsWith('N'),\n  null,\n  value.toString().replace('V','').trim()\n)",
    "onError": "set-to-blank",
    "newColumnName": "H08",
    "columnInsertIndex": 21,
    "description": "Crear la columna H08 en el índice 21 basada en la columna 8 usando la expresión grel:if(\n  value.toString().trim().endsWith('N'),\n  null,\n  value.toString().replace('V','').trim()\n)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "9",
    "expression": "grel:if(\n  value.toString().trim().endsWith('N'),\n  null,\n  value.toString().replace('V','').trim()\n)",
    "onError": "set-to-blank",
    "newColumnName": "H09",
    "columnInsertIndex": 23,
    "description": "Crear la columna H09 en el índice 23 basada en la columna 9 usando la expresión grel:if(\n  value.toString().trim().endsWith('N'),\n  null,\n  value.toString().replace('V','').trim()\n)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "10",
    "expression": "grel:if(\n  value.toString().trim().endsWith('N'),\n  null,\n  value.toString().replace('V','').trim()\n)",
    "onError": "set-to-blank",
    "newColumnName": "H10",
    "columnInsertIndex": 25,
    "description": "Crear la columna H10 en el índice 25 basada en la columna 10 usando la expresión grel:if(\n  value.toString().trim().endsWith('N'),\n  null,\n  value.toString().replace('V','').trim()\n)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "11",
    "expression": "grel:if(\n  value.toString().trim().endsWith('N'),\n  null,\n  value.toString().replace('V','').trim()\n)",
    "onError": "set-to-blank",
    "newColumnName": "H11",
    "columnInsertIndex": 27,
    "description": "Crear la columna H11 en el índice 27 basada en la columna 11 usando la expresión grel:if(\n  value.toString().trim().endsWith('N'),\n  null,\n  value.toString().replace('V','').trim()\n)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "12",
    "expression": "grel:if(\n  value.toString().trim().endsWith('N'),\n  null,\n  value.toString().replace('V','').trim()\n)",
    "onError": "set-to-blank",
    "newColumnName": "H12",
    "columnInsertIndex": 29,
    "description": "Crear la columna H12 en el índice 29 basada en la columna 12 usando la expresión grel:if(\n  value.toString().trim().endsWith('N'),\n  null,\n  value.toString().replace('V','').trim()\n)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "13",
    "expression": "grel:if(\n  value.toString().trim().endsWith('N'),\n  null,\n  value.toString().replace('V','').trim()\n)",
    "onError": "set-to-blank",
    "newColumnName": "H13",
    "columnInsertIndex": 31,
    "description": "Crear la columna H13 en el índice 31 basada en la columna 13 usando la expresión grel:if(\n  value.toString().trim().endsWith('N'),\n  null,\n  value.toString().replace('V','').trim()\n)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "14",
    "expression": "grel:if(\n  value.toString().trim().endsWith('N'),\n  null,\n  value.toString().replace('V','').trim()\n)",
    "onError": "set-to-blank",
    "newColumnName": "H14",
    "columnInsertIndex": 33,
    "description": "Crear la columna H14 en el índice 33 basada en la columna 14 usando la expresión grel:if(\n  value.toString().trim().endsWith('N'),\n  null,\n  value.toString().replace('V','').trim()\n)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "15",
    "expression": "grel:if(\n  value.toString().trim().endsWith('N'),\n  null,\n  value.toString().replace('V','').trim()\n)",
    "onError": "set-to-blank",
    "newColumnName": "H15",
    "columnInsertIndex": 35,
    "description": "Crear la columna H15 en el índice 35 basada en la columna 15 usando la expresión grel:if(\n  value.toString().trim().endsWith('N'),\n  null,\n  value.toString().replace('V','').trim()\n)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "16",
    "expression": "grel:if(\n  value.toString().trim().endsWith('N'),\n  null,\n  value.toString().replace('V','').trim()\n)",
    "onError": "set-to-blank",
    "newColumnName": "H16",
    "columnInsertIndex": 37,
    "description": "Crear la columna H16 en el índice 37 basada en la columna 16 usando la expresión grel:if(\n  value.toString().trim().endsWith('N'),\n  null,\n  value.toString().replace('V','').trim()\n)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "17",
    "expression": "grel:if(\n  value.toString().trim().endsWith('N'),\n  null,\n  value.toString().replace('V','').trim()\n)",
    "onError": "set-to-blank",
    "newColumnName": "H17",
    "columnInsertIndex": 39,
    "description": "Crear la columna H17 en el índice 39 basada en la columna 17 usando la expresión grel:if(\n  value.toString().trim().endsWith('N'),\n  null,\n  value.toString().replace('V','').trim()\n)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "18",
    "expression": "grel:if(\n  value.toString().trim().endsWith('N'),\n  null,\n  value.toString().replace('V','').trim()\n)",
    "onError": "set-to-blank",
    "newColumnName": "H18",
    "columnInsertIndex": 41,
    "description": "Crear la columna H18 en el índice 41 basada en la columna 18 usando la expresión grel:if(\n  value.toString().trim().endsWith('N'),\n  null,\n  value.toString().replace('V','').trim()\n)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "19",
    "expression": "grel:if(\n  value.toString().trim().endsWith('N'),\n  null,\n  value.toString().replace('V','').trim()\n)",
    "onError": "set-to-blank",
    "newColumnName": "H19",
    "columnInsertIndex": 43,
    "description": "Crear la columna H19 en el índice 43 basada en la columna 19 usando la expresión grel:if(\n  value.toString().trim().endsWith('N'),\n  null,\n  value.toString().replace('V','').trim()\n)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "20",
    "expression": "grel:if(\n  value.toString().trim().endsWith('N'),\n  null,\n  value.toString().replace('V','').trim()\n)",
    "onError": "set-to-blank",
    "newColumnName": "H20",
    "columnInsertIndex": 45,
    "description": "Crear la columna H20 en el índice 45 basada en la columna 20 usando la expresión grel:if(\n  value.toString().trim().endsWith('N'),\n  null,\n  value.toString().replace('V','').trim()\n)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "21",
    "expression": "grel:if(\n  value.toString().trim().endsWith('N'),\n  null,\n  value.toString().replace('V','').trim()\n)",
    "onError": "set-to-blank",
    "newColumnName": "H21",
    "columnInsertIndex": 47,
    "description": "Crear la columna H21 en el índice 47 basada en la columna 21 usando la expresión grel:if(\n  value.toString().trim().endsWith('N'),\n  null,\n  value.toString().replace('V','').trim()\n)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "22",
    "expression": "grel:if(\n  value.toString().trim().endsWith('N'),\n  null,\n  value.toString().replace('V','').trim()\n)",
    "onError": "set-to-blank",
    "newColumnName": "H22",
    "columnInsertIndex": 49,
    "description": "Crear la columna H22 en el índice 49 basada en la columna 22 usando la expresión grel:if(\n  value.toString().trim().endsWith('N'),\n  null,\n  value.toString().replace('V','').trim()\n)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "23",
    "expression": "grel:if(\n  value.toString().trim().endsWith('N'),\n  null,\n  value.toString().replace('V','').trim()\n)",
    "onError": "set-to-blank",
    "newColumnName": "H23",
    "columnInsertIndex": 51,
    "description": "Crear la columna H23 en el índice 51 basada en la columna 23 usando la expresión grel:if(\n  value.toString().trim().endsWith('N'),\n  null,\n  value.toString().replace('V','').trim()\n)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "24",
    "expression": "grel:if(\n  value.toString().trim().endsWith('N'),\n  null,\n  value.toString().replace('V','').trim()\n)",
    "onError": "set-to-blank",
    "newColumnName": "H24",
    "columnInsertIndex": 53,
    "description": "Crear la columna H24 en el índice 53 basada en la columna 24 usando la expresión grel:if(\n  value.toString().trim().endsWith('N'),\n  null,\n  value.toString().replace('V','').trim()\n)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "1",
    "expression": "join ([coalesce(cells['1'].value,''),coalesce(cells['2'].value,''),coalesce(cells['3'].value,''),coalesce(cells['4'].value,''),coalesce(cells['5'].value,''),coalesce(cells['6'].value,''),coalesce(cells['7'].value,''),coalesce(cells['8'].value,''),coalesce(cells['9'].value,''),coalesce(cells['10'].value,''),coalesce(cells['11'].value,''),coalesce(cells['12'].value,''),coalesce(cells['13'].value,''),coalesce(cells['14'].value,''),coalesce(cells['15'].value,''),coalesce(cells['16'].value,''),coalesce(cells['17'].value,''),coalesce(cells['18'].value,''),coalesce(cells['19'].value,''),coalesce(cells['20'].value,''),coalesce(cells['21'].value,''),coalesce(cells['22'].value,''),coalesce(cells['23'].value,''),coalesce(cells['24'].value,'')],'')",
    "onError": "keep-original",
    "newColumnName": "DELETE",
    "columnInsertIndex": 7,
    "description": "Crear la columna DELETE en el índice 7 basada en la columna 1 usando la expresión join ([coalesce(cells['1'].value,''),coalesce(cells['2'].value,''),coalesce(cells['3'].value,''),coalesce(cells['4'].value,''),coalesce(cells['5'].value,''),coalesce(cells['6'].value,''),coalesce(cells['7'].value,''),coalesce(cells['8'].value,''),coalesce(cells['9'].value,''),coalesce(cells['10'].value,''),coalesce(cells['11'].value,''),coalesce(cells['12'].value,''),coalesce(cells['13'].value,''),coalesce(cells['14'].value,''),coalesce(cells['15'].value,''),coalesce(cells['16'].value,''),coalesce(cells['17'].value,''),coalesce(cells['18'].value,''),coalesce(cells['19'].value,''),coalesce(cells['20'].value,''),coalesce(cells['21'].value,''),coalesce(cells['22'].value,''),coalesce(cells['23'].value,''),coalesce(cells['24'].value,'')],'')"
  },
  {
    "op": "core/column-reorder",
    "columnNames": [
      "PROVINCIA",
      "MUNICIPIO",
      "ESTACION",
      "MAGNITUD",
      "PUNTO_MUESTREO",
      "Fecha",
      "DELETE",
      "H01",
      "H02",
      "H03",
      "H04",
      "H05",
      "H06",
      "H07",
      "H08",
      "H09",
      "H10",
      "H11",
      "H12",
      "H13",
      "H14",
      "H15",
      "H16",
      "H17",
      "H18",
      "H19",
      "H20",
      "H21",
      "H22",
      "H23",
      "H24"
    ],
    "description": "Reorganizar columnas"
  },
  {
    "op": "core/column-removal",
    "columnName": "DELETE",
    "description": "Eliminar columna DELETE"
  },
  {
    "op": "core/column-removal",
    "columnName": "PUNTO_MUESTREO",
    "description": "Eliminar columna PUNTO_MUESTREO"
  }
]